---
title: "Global NCP Time Series — Reproducible Workflow Plan"
subtitle: "Repo refactor, configs, analysis pipeline, figures, and presentation"
author: "Your Name"
date: "`r format(Sys.Date(), '%B %d, %Y')`"
format:
  html:
    toc: true
    toc-depth: 3
    number-sections: true
    theme: cosmo
execute:
  echo: false
  warning: false
  message: false
editor: visual
---

## 1. Purpose & scope

This document is the living plan to (1) refactor the current repository in-place (to preserve history and contributions), (2) make the pipeline reproducible and configurable, and (3) deliver a publishable Quarto presentation for coauthors. It emphasizes **practical steps** you can run now and extend later.

**Immediate goals (for the upcoming meeting)**

- Freeze a minimal analysis pack (KS results CSV + 4–6 key figures).
- Render a clean **Quarto revealjs deck** that pulls those artifacts.
- Frame results with effect sizes (KS _D_, AUC, Cliff’s δ) and clear takeaways.

**Near-term goals (next ~1 week)**

- Externalize configuration (names, thresholds, variables).
- Consolidate core code into documented functions under `R/`.
- Add light tests + dependency lock (`renv`) for reproducibility.
- Rerun pipeline end-to-end and update deck from `outputs/...`.

---

## 2. Repo reset (refactor **in-place**)

We’ll keep history and contributions. First, declutter the root and add a clean skeleton.

### 2.1 Create folders

```bash
mkdir -p R analysis config data/{raw,interim,processed} outputs/{plots,tables,logs} presentation tests/testthat
touch data/interim/.gitkeep data/processed/.gitkeep
```


```{r}
install.packages("renv")
renv::init()
pkgs <- c(
  "dplyr","tidyr","readr","purrr","stringr","ggplot2","scales",
  "sf","arrow","fst","yaml","ggnewscale","ragg","knitr"
)
install.packages(setdiff(pkgs, installed.packages()[,1]))
renv::snapshot()
```

## 3. Config-first (no more hardcoding)

Place these YAMLs under config/. Adjust values as needed.

- 3.1 config/services.yml
- 3.2 Config/variables.yml
- 3.3 config/thresholds.yml
- 3.4 config/paths.yml
- 3.5 Config loader helper (R/config.R)
 
## 4. Core functions (move code into R/)

Create these files and paste your latest, documented functions (you already have most):

R/hotspots_extract.R

extract_hotspots() (returns hotspots_df, non_hotspots_df, summary, binaries, sf joins)

R/density_plots.R

plot_hotspot_density_bin2d() (with flexible palettes/limits; param df_hotspots naming)

R/ks_tests.R

run_ks_hot_vs_non() (augmented: D, AUC, Cliff’s δ, medians, BH p_adj)

R/ecdf_plots.R

plot_ecdf_grid() (roxygen provided)

save_ecdf_grids() (roxygen provided)

R/sf_utils.R

coalesce_left_join_sf() and any name-cleaners/masking helpers

R/utils.R

safe_name(), save_png_safe() (tries ragg::agg_png), palettes, %||%

Keep roxygen headers on public functions; run devtools::document() if you convert to a package later.

## 5. Analysis scripts (thin glue, not logic)

### 5.1 analysis/02_hotspots.qmd

Load long-format grid stats (post-ES modeling results).

Apply cfg$services$service_labels early; drop cfg$services$drop_services.

Call extract_hotspots().

Write: outputs/tables/hotspots_df.parquet, non_hotspots_df.parquet, and hotspots_sf.gpkg.

### 5.2 analysis/03_ks.qmd

Read hotspots/non-hotspots.

Call run_ks_hot_vs_non() with vars = names(cfg$vars$socio_vars), adjust_method="BH".

Write: outputs/tables/ks_results_hot_vs_non.csv.

Optionally render KS heatmap PNG here.

### 5.3 analysis/04_ecdf.qmd

Call save_ecdf_grids() for GDP, POP, etc., using cfg$vars$transforms.

Files saved under outputs/plots/ecdf/.

Keep each script ~50–100 lines and call functions; no inline heavy logic.

## 6. Tests (light but real)

Create tests/testthat/test-hotspots.R:

```{r test_that("extract_hotspots respects modes", {
  set.seed(1)
  df <- tibble::tibble(
    fid = 1:200,
    service = rep(c("A","B"), each=100),
    pct_chg = rnorm(200)
  )
  out <- extract_hotspots(
    df, value_col="pct_chg", threshold_mode="count", n_cut=5,
    rule_mode="vectors", loss_services="A", gain_services="B"
  )
  expect_true(nrow(out$hotspots_df) > 0)
  expect_true(all(c("hotspot_count","hotspot_services") %in% names(out$summary_df)))
})
``` 

## 7. igures & tables to freeze for the meeting (minimal pack)

- outputs/tables/ks_results_hot_vs_non.csv

- outputs/plots/ks_heatmap.png (D by service × variable, arrow direction)

- outputs/plots/ecdf/ecdf_*_log1p.png (GDP, GHS POP; top 6–8 services)

- outputs/plots/density/*.png (1–2 clear contrasts, optional)

- (Optional) 1 “mountain plot” for a big-Δ pair

Keep captions short; highlight effect sizes over p-values.

## 8 Quarto presentation (deck as the spine)

Create presentation/update.qmd (from earlier template). Point it to:

```{r}
ks_csv      <- "outputs/tables/ks_results_hot_vs_non.csv"
ecdf_dir    <- "outputs/plots/ecdf"
density_dir <- "outputs/plots/density"
heatmap_png <- "outputs/plots/ks_heatmap.png"
# Render 
quarto::quarto_render("presentation/update.qmd")
```

Share the HTML or publish (Quarto Pub / GitHub Pages). Iterate as outputs update.

## 9. Performance & memory notes

- Store big frames as parquet (arrow) or **fst`; avoid giant RDS in Git.

- For plotting, sample (seeded) to ~1e5 rows when needed; keep full data for stats.

- Free memory between plots (rm(p); gc()); prefer ragg::agg_png().

## 10. Interpretation frame (for slides & paper)

- With large N, p-values will be tiny; emphasize effect sizes (KS D, AUC, Cliff’s δ).

- Consistent pattern: retention/access/risk hotspots cluster nearer people/economy; pollination hotspots skew rural/natural.

- Associations ≠ causality; propose plausible mechanisms; note limitations.

- Plan robustness checks: thresholds, alternate socio vars, per-region stratification.

## 11. Next steps & timeline

### Today

- Copy 4–6 figures + KS CSV into outputs/....

- Render presentation/update.qmd and share.

### Next 2–3 days

- Move functions into R/, configs into config/.

- Run analysis/02_hotspots.qmd → 03_ks.qmd → 04_ecdf.qmd.

renv::snapshot().

### Before meeting

Tighten slide notes (why it matters).

Prepare 1–2 “decision” slides (figure shortlist, robustness asks).

### Post-meeting (1 week)

Address feedback → finalize configs.

Full rerun; lock figures and tables for draft.

Start paper scaffold (Methods → Results → Discussion) and repo README.

12. Quick command appendix

List largest items (keep them out of Git):

```{bash}
du -h --max-depth=2 | sort -hr | head -30
```

Count file types:

```{bash}
find . -type f | sed 's/.*\.//' | sort | uniq -c | sort -nr | head -20
```